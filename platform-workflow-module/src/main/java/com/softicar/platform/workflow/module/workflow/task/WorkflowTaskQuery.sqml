PACKAGE com.softicar.platform.workflow.module.workflow.task

IMPORT com.softicar.platform.core.module.user.AGUser
IMPORT com.softicar.platform.workflow.module.workflow.task.delegation.AGWorkflowTaskDelegation
IMPORT com.softicar.platform.workflow.module.workflow.task.execution.AGWorkflowTaskExecution
IMPORT com.softicar.platform.workflow.module.workflow.user.configuration.specific.AGWorkflowSpecificUserConfiguration

QUERY WorkflowTaskQuery {
	AGUser user
	OPTIONAL Boolean showMyDelegations
	OPTIONAL Boolean showExclusiveTasksOnly
	
	SELECT item
	SELECT task
	SELECT workflowNode
	SELECT workflow
	SELECT delegation.delegatedBy AS delegatedBy
	SELECT transaction.at AS createdAt
	
	FROM AGWorkflowTask AS task
	JOIN task.workflowItem AS item
	JOIN task.user AS user
	JOIN item.workflow AS workflow
	JOIN item.workflowNode AS workflowNode
	JOIN workflowNode.workflowVersion AS workflowVersion
	LEFT JOIN task.transaction AS transaction
	LEFT JOIN AGWorkflowTaskDelegation AS delegation ON delegation.workflowTask = task AND delegation.active
	LEFT JOIN AGWorkflowTaskExecution AS taskExecution ON taskExecution.workflowTask = task
	LEFT JOIN AGWorkflowSpecificUserConfiguration AS configuration ON configuration.user = $user AND configuration.workflow = item.workflow
	
	WHERE NOT task.closed
	WHERE task.notify
	WHERE taskExecution IS NULL
	WHERE IFNULL(configuration.subscribed, TRUE)

	#IF $showMyDelegations {
		WHERE delegation.targetUser = $user OR task.user = $user
	} ELSE {
		WHERE delegation.targetUser = $user OR (task.user = $user AND delegation IS NULL)
	}

	#IF $showExclusiveTasksOnly {
		LEFT JOIN AGWorkflowTask AS allTasksOnItem ON allTasksOnItem.workflowItem = item
		HAVING countDistinct(allTasksOnItem.id) = 1
	}

	GROUP BY item, task
	ORDER BY createdAt DESC
}