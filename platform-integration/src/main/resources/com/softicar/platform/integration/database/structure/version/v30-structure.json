[
  {
    "tableName": "`Core`.`AjaxException`",
    "createStatement": "CREATE TABLE `Core`.`AjaxException` (`id` INT NOT NULL AUTO_INCREMENT,`session` INT NOT NULL,`user` INT DEFAULT NULL,`exceptionDate` DATETIME NOT NULL DEFAULT '1970-01-01 00:00:00',`exceptionType` VARCHAR(255) NOT NULL,`exceptionText` TEXT DEFAULT NULL,`exceptionStackTrace` TEXT NOT NULL,PRIMARY KEY (`id`),KEY `exceptionDate` (`exceptionDate`),KEY `session` (`session`),KEY `user` (`user`),CONSTRAINT `AjaxException_ibfk_1` FOREIGN KEY (`session`) REFERENCES `Core`.`AjaxSession` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `AjaxException_ibfk_2` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`AjaxSessionRevision`",
    "createStatement": "CREATE TABLE `Core`.`AjaxSessionRevision` (`session` INT NOT NULL,`revision` VARCHAR(255) NOT NULL DEFAULT '',PRIMARY KEY (`session`),CONSTRAINT `AjaxSessionRevision_ibfk_1` FOREIGN KEY (`session`) REFERENCES `Core`.`AjaxSession` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION);"
  },
  {
    "tableName": "`Core`.`AjaxSession`",
    "createStatement": "CREATE TABLE `Core`.`AjaxSession` (`id` INT NOT NULL AUTO_INCREMENT,`user` INT DEFAULT NULL,`clientIpAddress` VARCHAR(255) DEFAULT NULL,`localName` VARCHAR(255) DEFAULT NULL,`localAddress` VARCHAR(255) DEFAULT NULL,`localPort` INT NOT NULL DEFAULT '0',`accessDate` DATETIME NOT NULL DEFAULT '1970-01-01 00:00:00',PRIMARY KEY (`id`),KEY `user` (`user`),CONSTRAINT `AjaxSession_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`BufferedEmailAttachment`",
    "createStatement": "CREATE TABLE `Core`.`BufferedEmailAttachment` (`id` INT NOT NULL AUTO_INCREMENT,`email` INT NOT NULL,`index` INT NOT NULL,`name` TEXT NOT NULL,`type` TEXT NOT NULL,`data` LONGBLOB NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `emailIndex` (`email`, `index`),CONSTRAINT `BufferedEmailAttachment_ibfk_1` FOREIGN KEY (`email`) REFERENCES `Core`.`BufferedEmail` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`BufferedEmailLog`",
    "createStatement": "CREATE TABLE `Core`.`BufferedEmailLog` (`bufferedEmail` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`bufferedEmail`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `BufferedEmailLog_ibfk_1` FOREIGN KEY (`bufferedEmail`) REFERENCES `Core`.`BufferedEmail` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `BufferedEmailLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`BufferedEmail`",
    "createStatement": "CREATE TABLE `Core`.`BufferedEmail` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`emailServer` INT NOT NULL,`createdAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,`createdBy` INT NOT NULL,`sentAt` TIMESTAMP NULL DEFAULT NULL,`from` TEXT NOT NULL,`sender` TEXT NOT NULL DEFAULT '',`replyTo` TEXT NOT NULL DEFAULT '',`to` TEXT NOT NULL DEFAULT '',`cc` TEXT NOT NULL DEFAULT '',`bcc` TEXT NOT NULL DEFAULT '',`messageId` TEXT DEFAULT NULL,`inReplyTo` TEXT DEFAULT NULL,`references` TEXT DEFAULT NULL,`subject` TEXT NOT NULL DEFAULT '',`content` MEDIUMTEXT DEFAULT NULL,`contentType` VARCHAR(255) DEFAULT NULL,`autoSubmitted` VARCHAR(255) DEFAULT NULL,PRIMARY KEY (`id`),KEY `createdBy` (`createdBy`),KEY `emailServer` (`emailServer`),CONSTRAINT `BufferedEmail_ibfk_1` FOREIGN KEY (`emailServer`) REFERENCES `Core`.`Server` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,CONSTRAINT `BufferedEmail_ibfk_2` FOREIGN KEY (`createdBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`CoreLanguage`",
    "createStatement": "CREATE TABLE `Core`.`CoreLanguage` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,`iso6391` VARCHAR(2) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `name` (`name`),UNIQUE KEY `iso6391` (`iso6391`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`CoreModuleInstanceLog`",
    "createStatement": "CREATE TABLE `Core`.`CoreModuleInstanceLog` (`coreModuleInstance` INT NOT NULL,`transaction` BIGINT NOT NULL,`systemUser` INT DEFAULT NULL,`primaryFileServer` INT DEFAULT NULL,`emailServer` INT DEFAULT NULL,`supportEmailAddress` VARCHAR(255) DEFAULT NULL,`noReplyEmailAddress` VARCHAR(255) DEFAULT NULL,`portalProtocol` VARCHAR(255) DEFAULT NULL,`portalHost` VARCHAR(255) DEFAULT NULL,`portalApplication` VARCHAR(255) DEFAULT NULL,`systemName` VARCHAR(255) DEFAULT NULL,`portalLogo` INT DEFAULT NULL,`defaultLocalization` INT DEFAULT NULL,`testSystem` BOOL DEFAULT NULL,PRIMARY KEY (`coreModuleInstance`, `transaction`),KEY `transaction` (`transaction`),KEY `primaryFileServer` (`primaryFileServer`),KEY `systemUser` (`systemUser`),KEY `emailServer` (`emailServer`),KEY `portalLogo` (`portalLogo`),KEY `defaultLocalization` (`defaultLocalization`),CONSTRAINT `CoreModuleInstanceLog_ibfk_1` FOREIGN KEY (`coreModuleInstance`) REFERENCES `Core`.`CoreModuleInstance` (`base`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `CoreModuleInstanceLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `CoreModuleInstanceLog_ibfk_3` FOREIGN KEY (`systemUser`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstanceLog_ibfk_4` FOREIGN KEY (`primaryFileServer`) REFERENCES `Core`.`StoredFileServer` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstanceLog_ibfk_5` FOREIGN KEY (`emailServer`) REFERENCES `Core`.`Server` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstanceLog_ibfk_6` FOREIGN KEY (`portalLogo`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstanceLog_ibfk_7` FOREIGN KEY (`defaultLocalization`) REFERENCES `Core`.`Localization` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`CoreModuleInstance`",
    "createStatement": "CREATE TABLE `Core`.`CoreModuleInstance` (`base` INT NOT NULL COMMENT '@base@',`systemUser` INT DEFAULT NULL,`primaryFileServer` INT DEFAULT NULL COMMENT 'Server used for uploading files',`emailServer` INT DEFAULT NULL,`supportEmailAddress` VARCHAR(255) NOT NULL DEFAULT 'support@example.com',`noReplyEmailAddress` VARCHAR(255) NOT NULL DEFAULT 'no-reply@example.com',`portalProtocol` VARCHAR(255) NOT NULL DEFAULT 'https',`portalHost` VARCHAR(255) NOT NULL DEFAULT 'www.example.com',`portalApplication` VARCHAR(255) NOT NULL DEFAULT 'portal',`systemName` VARCHAR(255) NOT NULL DEFAULT 'Forspace',`portalLogo` INT DEFAULT NULL,`defaultLocalization` INT NOT NULL,`testSystem` BOOL NOT NULL DEFAULT '0',PRIMARY KEY (`base`),KEY `primaryFileServer` (`primaryFileServer`),KEY `systemUser` (`systemUser`),KEY `emailServer` (`emailServer`),KEY `portalLogo` (`portalLogo`),KEY `defaultLocalization` (`defaultLocalization`),CONSTRAINT `CoreModuleInstance_ibfk_1` FOREIGN KEY (`base`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `CoreModuleInstance_ibfk_2` FOREIGN KEY (`systemUser`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstance_ibfk_3` FOREIGN KEY (`primaryFileServer`) REFERENCES `Core`.`StoredFileServer` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstance_ibfk_4` FOREIGN KEY (`emailServer`) REFERENCES `Core`.`Server` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstance_ibfk_5` FOREIGN KEY (`portalLogo`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `CoreModuleInstance_ibfk_6` FOREIGN KEY (`defaultLocalization`) REFERENCES `Core`.`Localization` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`EmailRecipientType`",
    "createStatement": "CREATE TABLE `Core`.`EmailRecipientType` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`LocalizationLog`",
    "createStatement": "CREATE TABLE `Core`.`LocalizationLog` (`user` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(255) DEFAULT NULL,`language` INT DEFAULT NULL,`decimalSeparator` VARCHAR(255) DEFAULT NULL,`digitGroupSeparator` VARCHAR(255) DEFAULT NULL,`dateFormat` VARCHAR(255) DEFAULT NULL,PRIMARY KEY (`user`, `transaction`),KEY `transaction` (`transaction`),KEY `language` (`language`),CONSTRAINT `LocalizationLog_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`Localization` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `LocalizationLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `LocalizationLog_ibfk_3` FOREIGN KEY (`language`) REFERENCES `Core`.`CoreLanguage` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`Localization`",
    "createStatement": "CREATE TABLE `Core`.`Localization` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,`language` INT NOT NULL,`decimalSeparator` VARCHAR(255) NOT NULL,`digitGroupSeparator` VARCHAR(255) NOT NULL DEFAULT '',`dateFormat` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `name` (`name`),KEY `language` (`language`),CONSTRAINT `Localization_ibfk_1` FOREIGN KEY (`language`) REFERENCES `Core`.`CoreLanguage` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`LogLevel`",
    "createStatement": "CREATE TABLE `Core`.`LogLevel` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`LogMessage`",
    "createStatement": "CREATE TABLE `Core`.`LogMessage` (`id` INT NOT NULL AUTO_INCREMENT,`process` INT NOT NULL,`level` INT DEFAULT NULL,`logText` TEXT NOT NULL,`logTime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,`notificationTime` DATETIME DEFAULT NULL,PRIMARY KEY (`id`),KEY `process` (`process`),KEY `level` (`level`),CONSTRAINT `LogMessage_ibfk_1` FOREIGN KEY (`process`) REFERENCES `Core`.`LogProcess` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION,CONSTRAINT `LogMessage_ibfk_2` FOREIGN KEY (`level`) REFERENCES `Core`.`LogLevel` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`LogProcess`",
    "createStatement": "CREATE TABLE `Core`.`LogProcess` (`id` INT NOT NULL AUTO_INCREMENT,`serverIp` VARCHAR(255) NOT NULL DEFAULT '',`className` VARCHAR(255) NOT NULL,`startTime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,`worstLevel` INT DEFAULT NULL,PRIMARY KEY (`id`),KEY `startTime` (`startTime`),KEY `className` (`className`),KEY `worstLevel` (`worstLevel`),CONSTRAINT `LogProcess_ibfk_1` FOREIGN KEY (`worstLevel`) REFERENCES `Core`.`LogLevel` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`MaintenanceState`",
    "createStatement": "CREATE TABLE `Core`.`MaintenanceState` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`MaintenanceWindowLog`",
    "createStatement": "CREATE TABLE `Core`.`MaintenanceWindowLog` (`maintenanceWindow` INT NOT NULL,`transaction` BIGINT NOT NULL,`expectedStart` DATETIME DEFAULT NULL,`expectedEnd` DATETIME DEFAULT NULL,`state` INT DEFAULT NULL,`comment` TINYTEXT DEFAULT NULL,PRIMARY KEY (`maintenanceWindow`, `transaction`),KEY `transaction` (`transaction`),KEY `state` (`state`),CONSTRAINT `MaintenanceWindowLog_ibfk_1` FOREIGN KEY (`maintenanceWindow`) REFERENCES `Core`.`MaintenanceWindow` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `MaintenanceWindowLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `MaintenanceWindowLog_ibfk_3` FOREIGN KEY (`state`) REFERENCES `Core`.`MaintenanceState` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`MaintenanceWindow`",
    "createStatement": "CREATE TABLE `Core`.`MaintenanceWindow` (`id` INT NOT NULL AUTO_INCREMENT,`expectedStart` DATETIME NOT NULL,`expectedEnd` DATETIME NOT NULL,`state` INT NOT NULL,`comment` TINYTEXT DEFAULT '',PRIMARY KEY (`id`),KEY `state` (`state`),CONSTRAINT `MaintenanceWindow_ibfk_1` FOREIGN KEY (`state`) REFERENCES `Core`.`MaintenanceState` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ModuleInstanceBaseLog`",
    "createStatement": "CREATE TABLE `Core`.`ModuleInstanceBaseLog` (`moduleInstanceBase` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`moduleInstanceBase`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `ModuleInstanceBaseLog_ibfk_1` FOREIGN KEY (`moduleInstanceBase`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ModuleInstanceBaseLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`ModuleInstanceBase`",
    "createStatement": "CREATE TABLE `Core`.`ModuleInstanceBase` (`id` INT NOT NULL AUTO_INCREMENT,`transaction` BIGINT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`moduleUuid` INT NOT NULL,PRIMARY KEY (`id`),KEY `transaction` (`transaction`),KEY `moduleUuid` (`moduleUuid`),CONSTRAINT `ModuleInstanceBase_ibfk_1` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,CONSTRAINT `ModuleInstanceBase_ibfk_2` FOREIGN KEY (`moduleUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ModuleInstancePermissionAssignmentLog`",
    "createStatement": "CREATE TABLE `Core`.`ModuleInstancePermissionAssignmentLog` (`assignment` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`permission` INT DEFAULT NULL,PRIMARY KEY (`assignment`, `transaction`),KEY `transaction` (`transaction`),KEY `permission` (`permission`),CONSTRAINT `ModuleInstancePermissionAssignmentLog_ibfk_1` FOREIGN KEY (`assignment`) REFERENCES `Core`.`ModuleInstancePermissionAssignment` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ModuleInstancePermissionAssignmentLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ModuleInstancePermissionAssignmentLog_ibfk_3` FOREIGN KEY (`permission`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ModuleInstancePermissionAssignment`",
    "createStatement": "CREATE TABLE `Core`.`ModuleInstancePermissionAssignment` (`id` INT NOT NULL AUTO_INCREMENT,`transaction` BIGINT NOT NULL,`user` INT NOT NULL,`moduleInstanceBase` INT NOT NULL,`permission` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',PRIMARY KEY (`id`),UNIQUE KEY `userModuleInstanceBasePermission` (`user`, `moduleInstanceBase`, `permission`),KEY `moduleInstanceBase` (`moduleInstanceBase`),KEY `permission` (`permission`),KEY `transaction` (`transaction`),CONSTRAINT `ModuleInstancePermissionAssignment_ibfk_1` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,CONSTRAINT `ModuleInstancePermissionAssignment_ibfk_2` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `ModuleInstancePermissionAssignment_ibfk_3` FOREIGN KEY (`moduleInstanceBase`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,CONSTRAINT `ModuleInstancePermissionAssignment_ibfk_4` FOREIGN KEY (`permission`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ModulePanicReceiverLog`",
    "createStatement": "CREATE TABLE `Core`.`ModulePanicReceiverLog` (`modulePanicReceiver` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`modulePanicReceiver`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `ModulePanicReceiverLog_ibfk_1` FOREIGN KEY (`modulePanicReceiver`) REFERENCES `Core`.`ModulePanicReceiver` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ModulePanicReceiverLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`ModulePanicReceiver`",
    "createStatement": "CREATE TABLE `Core`.`ModulePanicReceiver` (`id` INT NOT NULL AUTO_INCREMENT,`moduleUuid` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`user` INT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `moduleUuidUser` (`moduleUuid`, `user`),KEY `user` (`user`),CONSTRAINT `ModulePanicReceiver_ibfk_1` FOREIGN KEY (`moduleUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `ModulePanicReceiver_ibfk_2` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`PasswordPolicyLog`",
    "createStatement": "CREATE TABLE `Core`.`PasswordPolicyLog` (`passwordPolicy` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`name` VARCHAR(255) DEFAULT NULL,`maximumPasswordReuse` INT DEFAULT NULL,`maximumPasswordAge` INT DEFAULT NULL,`twoFactorAuthentication` BOOL DEFAULT NULL,PRIMARY KEY (`passwordPolicy`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `PasswordPolicyLog_ibfk_1` FOREIGN KEY (`passwordPolicy`) REFERENCES `Core`.`PasswordPolicy` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `PasswordPolicyLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`PasswordPolicy`",
    "createStatement": "CREATE TABLE `Core`.`PasswordPolicy` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`name` VARCHAR(255) NOT NULL,`maximumPasswordReuse` INT DEFAULT NULL,`maximumPasswordAge` INT DEFAULT NULL,`twoFactorAuthentication` BOOL NOT NULL DEFAULT '0',PRIMARY KEY (`id`));"
  },
  {
    "tableName": "`Core`.`ProgramExecutionLog`",
    "createStatement": "CREATE TABLE `Core`.`ProgramExecutionLog` (`programExecution` BIGINT NOT NULL,`transaction` BIGINT NOT NULL,`startedAt` DATETIME DEFAULT NULL,`terminatedAt` DATETIME DEFAULT NULL,`failed` BOOL DEFAULT NULL,`output` LONGTEXT DEFAULT NULL,`maximumRuntimeExceeded` BOOL DEFAULT NULL,`queuedBy` INT DEFAULT NULL,PRIMARY KEY (`programExecution`, `transaction`),KEY `transaction` (`transaction`),KEY `queuedBy` (`queuedBy`),CONSTRAINT `ProgramExecutionLog_ibfk_1` FOREIGN KEY (`programExecution`) REFERENCES `Core`.`ProgramExecution` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ProgramExecutionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ProgramExecutionLog_ibfk_3` FOREIGN KEY (`queuedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ProgramExecution`",
    "createStatement": "CREATE TABLE `Core`.`ProgramExecution` (`id` BIGINT NOT NULL AUTO_INCREMENT,`programUuid` INT NOT NULL,`startedAt` DATETIME DEFAULT NULL,`terminatedAt` DATETIME DEFAULT NULL,`failed` BOOL NOT NULL DEFAULT '0',`output` LONGTEXT NOT NULL DEFAULT '',`maximumRuntimeExceeded` BOOL NOT NULL DEFAULT '0',`queuedBy` INT NOT NULL,PRIMARY KEY (`id`),KEY `programUuid` (`programUuid`),KEY `queuedBy` (`queuedBy`),CONSTRAINT `ProgramExecution_ibfk_1` FOREIGN KEY (`programUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `ProgramExecution_ibfk_2` FOREIGN KEY (`queuedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ProgramLog`",
    "createStatement": "CREATE TABLE `Core`.`ProgramLog` (`program` BIGINT NOT NULL,`transaction` BIGINT NOT NULL,`executionRetentionDays` INT DEFAULT NULL,PRIMARY KEY (`program`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `ProgramLog_ibfk_1` FOREIGN KEY (`program`) REFERENCES `Core`.`Program` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ProgramLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`ProgramState`",
    "createStatement": "CREATE TABLE `Core`.`ProgramState` (`program` BIGINT NOT NULL,`queuedAt` DATETIME DEFAULT NULL,`queuedBy` INT DEFAULT NULL,`abortRequested` BOOL NOT NULL DEFAULT '0',`currentExecution` BIGINT DEFAULT NULL,PRIMARY KEY (`program`),KEY `queuedBy` (`queuedBy`),KEY `currentExecution` (`currentExecution`),CONSTRAINT `ProgramState_ibfk_1` FOREIGN KEY (`program`) REFERENCES `Core`.`Program` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `ProgramState_ibfk_2` FOREIGN KEY (`queuedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `ProgramState_ibfk_3` FOREIGN KEY (`currentExecution`) REFERENCES `Core`.`ProgramExecution` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`Program`",
    "createStatement": "CREATE TABLE `Core`.`Program` (`id` BIGINT NOT NULL AUTO_INCREMENT,`programUuid` INT NOT NULL,`executionRetentionDays` INT NOT NULL DEFAULT '28',PRIMARY KEY (`id`),UNIQUE KEY `programUuid` (`programUuid`),CONSTRAINT `Program_ibfk_1` FOREIGN KEY (`programUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ReplicationChecksum`",
    "createStatement": "CREATE TABLE `Core`.`ReplicationChecksum` (`db` VARCHAR(64) NOT NULL,`tbl` VARCHAR(64) NOT NULL,`chunk` INT NOT NULL,`chunk_time` FLOAT DEFAULT NULL,`chunk_index` VARCHAR(200) DEFAULT NULL,`lower_boundary` TEXT DEFAULT NULL,`upper_boundary` TEXT DEFAULT NULL,`this_crc` VARCHAR(40) NOT NULL,`this_cnt` INT NOT NULL,`master_crc` VARCHAR(40) DEFAULT NULL,`master_cnt` INT DEFAULT NULL,`ts` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,PRIMARY KEY (`db`, `tbl`, `chunk`),KEY `timestampDatabaseNameTableName` (`ts`, `db`, `tbl`));"
  },
  {
    "tableName": "`Core`.`RoleLog`",
    "createStatement": "CREATE TABLE `Core`.`RoleLog` (`role` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`name` VARCHAR(255) DEFAULT NULL,PRIMARY KEY (`role`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `RoleLog_ibfk_1` FOREIGN KEY (`role`) REFERENCES `Core`.`Role` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `RoleLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`RolePermissionLog`",
    "createStatement": "CREATE TABLE `Core`.`RolePermissionLog` (`roleUser` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`role` INT DEFAULT NULL,`moduleInstanceBase` INT DEFAULT NULL,`permissionUuid` INT DEFAULT NULL,PRIMARY KEY (`roleUser`, `transaction`),KEY `transaction` (`transaction`),KEY `role` (`role`),KEY `moduleInstanceBase` (`moduleInstanceBase`),KEY `permissionUuid` (`permissionUuid`),CONSTRAINT `RolePermissionLog_ibfk_1` FOREIGN KEY (`roleUser`) REFERENCES `Core`.`RolePermission` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `RolePermissionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `RolePermissionLog_ibfk_3` FOREIGN KEY (`role`) REFERENCES `Core`.`Role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RolePermissionLog_ibfk_4` FOREIGN KEY (`moduleInstanceBase`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RolePermissionLog_ibfk_5` FOREIGN KEY (`permissionUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`RolePermission`",
    "createStatement": "CREATE TABLE `Core`.`RolePermission` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`role` INT NOT NULL,`moduleInstanceBase` INT NOT NULL,`permissionUuid` INT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `rolePermissionUuidModuleInstanceBase` (`role`, `permissionUuid`, `moduleInstanceBase`),KEY `moduleInstanceBase` (`moduleInstanceBase`),KEY `permissionUuid` (`permissionUuid`),CONSTRAINT `RolePermission_ibfk_1` FOREIGN KEY (`role`) REFERENCES `Core`.`Role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RolePermission_ibfk_2` FOREIGN KEY (`moduleInstanceBase`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RolePermission_ibfk_3` FOREIGN KEY (`permissionUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`RoleUserLog`",
    "createStatement": "CREATE TABLE `Core`.`RoleUserLog` (`roleUser` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`role` INT DEFAULT NULL,`user` INT DEFAULT NULL,PRIMARY KEY (`roleUser`, `transaction`),KEY `transaction` (`transaction`),KEY `role` (`role`),KEY `user` (`user`),CONSTRAINT `RoleUserLog_ibfk_1` FOREIGN KEY (`roleUser`) REFERENCES `Core`.`RoleUser` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `RoleUserLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `RoleUserLog_ibfk_3` FOREIGN KEY (`role`) REFERENCES `Core`.`Role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RoleUserLog_ibfk_4` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`RoleUser`",
    "createStatement": "CREATE TABLE `Core`.`RoleUser` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`role` INT NOT NULL,`user` INT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `roleUser` (`role`, `user`),KEY `user` (`user`),CONSTRAINT `RoleUser_ibfk_1` FOREIGN KEY (`role`) REFERENCES `Core`.`Role` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `RoleUser_ibfk_2` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`Role`",
    "createStatement": "CREATE TABLE `Core`.`Role` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `name` (`name`));"
  },
  {
    "tableName": "`Core`.`ScheduledProgramExecutionLog`",
    "createStatement": "CREATE TABLE `Core`.`ScheduledProgramExecutionLog` (`scheduledProgramExecution` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`cronExpression` VARCHAR(255) DEFAULT NULL,`maximumRuntime` INT DEFAULT NULL,`automaticAbort` BOOL DEFAULT NULL,PRIMARY KEY (`scheduledProgramExecution`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `ScheduledProgramExecutionLog_ibfk_1` FOREIGN KEY (`scheduledProgramExecution`) REFERENCES `Core`.`ScheduledProgramExecution` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ScheduledProgramExecutionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`ScheduledProgramExecution`",
    "createStatement": "CREATE TABLE `Core`.`ScheduledProgramExecution` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`cronExpression` VARCHAR(255) NOT NULL,`programUuid` INT NOT NULL,`maximumRuntime` INT DEFAULT NULL,`automaticAbort` BOOL NOT NULL DEFAULT '0',PRIMARY KEY (`id`),UNIQUE KEY `programUuid` (`programUuid`),CONSTRAINT `ScheduledProgramExecution_ibfk_1` FOREIGN KEY (`programUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`ServerLog`",
    "createStatement": "CREATE TABLE `Core`.`ServerLog` (`server` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`name` VARCHAR(255) DEFAULT NULL,`address` VARCHAR(255) DEFAULT NULL,`port` INT DEFAULT NULL,`username` VARCHAR(255) DEFAULT NULL,`password` VARCHAR(255) DEFAULT NULL,`domain` VARCHAR(255) DEFAULT NULL,`connectorUuid` INT DEFAULT NULL,`connectorConfiguration` MEDIUMTEXT DEFAULT NULL,PRIMARY KEY (`server`, `transaction`),KEY `transaction` (`transaction`),KEY `connectorUuid` (`connectorUuid`),CONSTRAINT `ServerLog_ibfk_1` FOREIGN KEY (`server`) REFERENCES `Core`.`Server` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ServerLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `ServerLog_ibfk_3` FOREIGN KEY (`connectorUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`Server`",
    "createStatement": "CREATE TABLE `Core`.`Server` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`name` VARCHAR(255) NOT NULL,`address` VARCHAR(255) NOT NULL,`port` INT NOT NULL,`username` VARCHAR(255) NOT NULL DEFAULT '',`password` VARCHAR(255) NOT NULL DEFAULT '',`domain` VARCHAR(255) DEFAULT NULL,`connectorUuid` INT DEFAULT NULL,`connectorConfiguration` MEDIUMTEXT NOT NULL DEFAULT '',`connectorData` MEDIUMTEXT NOT NULL DEFAULT '',PRIMARY KEY (`id`),KEY `connectorUuid` (`connectorUuid`),CONSTRAINT `Server_ibfk_1` FOREIGN KEY (`connectorUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`StoredFileAccessLog`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileAccessLog` (`id` INT NOT NULL AUTO_INCREMENT,`file` INT NOT NULL,`accessedBy` INT NOT NULL,`accessedAt` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,PRIMARY KEY (`id`),KEY `file` (`file`),KEY `accessedBy` (`accessedBy`),CONSTRAINT `StoredFileAccessLog_ibfk_1` FOREIGN KEY (`file`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `StoredFileAccessLog_ibfk_2` FOREIGN KEY (`accessedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`StoredFileChunk`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileChunk` (`id` INT NOT NULL AUTO_INCREMENT,`file` INT NOT NULL,`chunkIndex` INT NOT NULL DEFAULT '0',`chunkData` BLOB NOT NULL,`chunkSize` INT NOT NULL DEFAULT '0',PRIMARY KEY (`id`),UNIQUE KEY `fileChunkIndex` (`file`, `chunkIndex`),CONSTRAINT `StoredFileChunk_ibfk_1` FOREIGN KEY (`file`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`StoredFileLog`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileLog` (`id` INT NOT NULL AUTO_INCREMENT,`file` INT NOT NULL,`removeAt` DATETIME DEFAULT NULL,`loggedAt` DATETIME NOT NULL,`loggedBy` INT NOT NULL,PRIMARY KEY (`id`),KEY `file` (`file`),KEY `loggedBy` (`loggedBy`),KEY `loggedAt` (`loggedAt`),CONSTRAINT `StoredFileLog_ibfk_1` FOREIGN KEY (`file`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `StoredFileLog_ibfk_2` FOREIGN KEY (`loggedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`StoredFileServerLog`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileServerLog` (`storedFileServer` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`url` VARCHAR(255) DEFAULT NULL,`domain` VARCHAR(255) DEFAULT NULL,`username` VARCHAR(255) DEFAULT NULL,`password` VARCHAR(255) DEFAULT NULL,PRIMARY KEY (`storedFileServer`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `StoredFileServerLog_ibfk_1` FOREIGN KEY (`storedFileServer`) REFERENCES `Core`.`StoredFileServer` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `StoredFileServerLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`StoredFileServer`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileServer` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`url` VARCHAR(255) NOT NULL,`domain` VARCHAR(255) NOT NULL,`username` VARCHAR(255) NOT NULL,`password` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`));"
  },
  {
    "tableName": "`Core`.`StoredFileSetItem`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileSetItem` (`fileSet` INT NOT NULL,`file` INT NOT NULL,PRIMARY KEY (`fileSet`, `file`),KEY `file` (`file`),CONSTRAINT `StoredFileSetItem_ibfk_1` FOREIGN KEY (`fileSet`) REFERENCES `Core`.`StoredFileSet` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `StoredFileSetItem_ibfk_2` FOREIGN KEY (`file`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`StoredFileSet`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileSet` (`id` INT NOT NULL AUTO_INCREMENT,`hash` VARBINARY(16) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `hash` (`hash`));"
  },
  {
    "tableName": "`Core`.`StoredFileSha1`",
    "createStatement": "CREATE TABLE `Core`.`StoredFileSha1` (`id` INT NOT NULL AUTO_INCREMENT,`hash` VARBINARY(20) NOT NULL,`size` BIGINT NOT NULL DEFAULT '0',PRIMARY KEY (`id`),UNIQUE KEY `hash` (`hash`));"
  },
  {
    "tableName": "`Core`.`StoredFile`",
    "createStatement": "CREATE TABLE `Core`.`StoredFile` (`id` INT NOT NULL AUTO_INCREMENT,`fileName` VARCHAR(255) NOT NULL,`contentType` VARCHAR(255) NOT NULL DEFAULT '',`sha1` INT DEFAULT NULL,`createdBy` INT NOT NULL,`createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,`removeAt` DATETIME DEFAULT NULL,PRIMARY KEY (`id`),KEY `sha1` (`sha1`),KEY `createdBy` (`createdBy`),CONSTRAINT `StoredFile_ibfk_1` FOREIGN KEY (`sha1`) REFERENCES `Core`.`StoredFileSha1` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `StoredFile_ibfk_2` FOREIGN KEY (`createdBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`SystemEventLog`",
    "createStatement": "CREATE TABLE `Core`.`SystemEventLog` (`systemEvent` INT NOT NULL,`transaction` BIGINT NOT NULL,`needsConfirmation` BOOL DEFAULT NULL,PRIMARY KEY (`systemEvent`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `SystemEventLog_ibfk_1` FOREIGN KEY (`systemEvent`) REFERENCES `Core`.`SystemEvent` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `SystemEventLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`SystemEventSeverity`",
    "createStatement": "CREATE TABLE `Core`.`SystemEventSeverity` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,`needsConfirmation` BOOL NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`SystemEvent`",
    "createStatement": "CREATE TABLE `Core`.`SystemEvent` (`id` INT NOT NULL AUTO_INCREMENT,`needsConfirmation` BOOL NOT NULL,`severity` INT NOT NULL,`causedAt` DATETIME NOT NULL,`causedBy` INT NOT NULL,`message` TEXT NOT NULL,`properties` TEXT NOT NULL,PRIMARY KEY (`id`),KEY `severity` (`severity`),KEY `causedBy` (`causedBy`),CONSTRAINT `SystemEvent_ibfk_1` FOREIGN KEY (`severity`) REFERENCES `Core`.`SystemEventSeverity` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `SystemEvent_ibfk_2` FOREIGN KEY (`causedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`Transaction`",
    "createStatement": "CREATE TABLE `Core`.`Transaction` (`id` BIGINT NOT NULL AUTO_INCREMENT,`at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,`by` INT NOT NULL,PRIMARY KEY (`id`),KEY `by` (`by`),CONSTRAINT `Transaction_ibfk_1` FOREIGN KEY (`by`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`UserAllowedIpRuleLog`",
    "createStatement": "CREATE TABLE `Core`.`UserAllowedIpRuleLog` (`userAllowedIpRule` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`name` VARCHAR(255) DEFAULT NULL,`addresses` TEXT DEFAULT NULL,PRIMARY KEY (`userAllowedIpRule`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `UserAllowedIpRuleLog_ibfk_1` FOREIGN KEY (`userAllowedIpRule`) REFERENCES `Core`.`UserAllowedIpRule` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `UserAllowedIpRuleLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Core`.`UserAllowedIpRule`",
    "createStatement": "CREATE TABLE `Core`.`UserAllowedIpRule` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`name` VARCHAR(255) NOT NULL,`addresses` TEXT NOT NULL COMMENT 'each line contains an ip or network address',PRIMARY KEY (`id`),UNIQUE KEY `name` (`name`));"
  },
  {
    "tableName": "`Core`.`UserLog`",
    "createStatement": "CREATE TABLE `Core`.`UserLog` (`user` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`loginName` VARCHAR(255) DEFAULT NULL,`firstName` VARCHAR(255) DEFAULT NULL,`lastName` VARCHAR(255) DEFAULT NULL,`emailAddress` VARCHAR(255) DEFAULT NULL,`localization` INT DEFAULT NULL,`passwordPolicy` INT DEFAULT NULL,`allowedIpRule` INT DEFAULT NULL,`preferencesJson` TEXT DEFAULT NULL,PRIMARY KEY (`user`, `transaction`),KEY `transaction` (`transaction`),KEY `localization` (`localization`),KEY `passwordPolicy` (`passwordPolicy`),KEY `allowedIpRule` (`allowedIpRule`),CONSTRAINT `UserLog_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `UserLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `UserLog_ibfk_3` FOREIGN KEY (`localization`) REFERENCES `Core`.`Localization` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `UserLog_ibfk_4` FOREIGN KEY (`passwordPolicy`) REFERENCES `Core`.`PasswordPolicy` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `UserLog_ibfk_5` FOREIGN KEY (`allowedIpRule`) REFERENCES `Core`.`UserAllowedIpRule` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`UserLoginFailureLog`",
    "createStatement": "CREATE TABLE `Core`.`UserLoginFailureLog` (`id` INT NOT NULL AUTO_INCREMENT,`type` INT DEFAULT NULL,`username` VARCHAR(255) NOT NULL DEFAULT '',`serverIpAddress` VARCHAR(255) DEFAULT NULL,`loginAt` DATETIME NOT NULL,PRIMARY KEY (`id`),KEY `usernameLoginAt` (`username`, `loginAt`),KEY `type` (`type`),CONSTRAINT `UserLoginFailureLog_ibfk_1` FOREIGN KEY (`type`) REFERENCES `Core`.`UserLoginFailureType` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`UserLoginFailureType`",
    "createStatement": "CREATE TABLE `Core`.`UserLoginFailureType` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`UserLoginLog`",
    "createStatement": "CREATE TABLE `Core`.`UserLoginLog` (`id` INT NOT NULL AUTO_INCREMENT,`user` INT NOT NULL,`password` INT NOT NULL,`loginAt` DATETIME NOT NULL,PRIMARY KEY (`id`),KEY `password` (`password`),KEY `loginAt` (`loginAt`),KEY `userLoginAt` (`user`, `loginAt`),CONSTRAINT `UserLoginLog_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `UserLoginLog_ibfk_2` FOREIGN KEY (`password`) REFERENCES `Core`.`UserPassword` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`UserPasswordAlgorithm`",
    "createStatement": "CREATE TABLE `Core`.`UserPasswordAlgorithm` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Core`.`UserPassword`",
    "createStatement": "CREATE TABLE `Core`.`UserPassword` (`id` INT NOT NULL AUTO_INCREMENT,`user` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`algorithm` INT DEFAULT NULL,`encryptedPassword` TEXT NOT NULL,`createdAt` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,`policyFulfilled` BOOL NOT NULL DEFAULT '1',`compromised` BOOL NOT NULL DEFAULT '0',`lastLoginAt` DATETIME NOT NULL DEFAULT '1970-01-01 00:00:00',PRIMARY KEY (`id`),KEY `user` (`user`),KEY `algorithm` (`algorithm`),CONSTRAINT `UserPassword_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `UserPassword_ibfk_2` FOREIGN KEY (`algorithm`) REFERENCES `Core`.`UserPasswordAlgorithm` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`UserSpecificTableConfiguration`",
    "createStatement": "CREATE TABLE `Core`.`UserSpecificTableConfiguration` (`id` INT NOT NULL AUTO_INCREMENT,`user` INT DEFAULT NULL,`tablePathHash` VARCHAR(255) NOT NULL DEFAULT '',`columnTitlesHash` VARCHAR(255) NOT NULL DEFAULT '',`serialization` TEXT NOT NULL DEFAULT '',PRIMARY KEY (`id`),UNIQUE KEY `userTablePathHashColumnTitlesHash` (`user`, `tablePathHash`, `columnTitlesHash`),CONSTRAINT `UserSpecificTableConfiguration_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`User`",
    "createStatement": "CREATE TABLE `Core`.`User` (`id` INT NOT NULL AUTO_INCREMENT,`active` BOOL NOT NULL DEFAULT '1',`loginName` VARCHAR(255) NOT NULL,`firstName` VARCHAR(255) NOT NULL,`lastName` VARCHAR(255) NOT NULL,`emailAddress` VARCHAR(255) NOT NULL DEFAULT '',`systemUser` BOOL NOT NULL DEFAULT '0',`localization` INT NOT NULL,`passwordPolicy` INT DEFAULT NULL,`allowedIpRule` INT DEFAULT NULL,`preferencesJson` TEXT NOT NULL DEFAULT '',PRIMARY KEY (`id`),UNIQUE KEY `loginName` (`loginName`),KEY `localization` (`localization`),KEY `passwordPolicy` (`passwordPolicy`),KEY `allowedIpRule` (`allowedIpRule`),CONSTRAINT `User_ibfk_1` FOREIGN KEY (`localization`) REFERENCES `Core`.`Localization` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `User_ibfk_2` FOREIGN KEY (`passwordPolicy`) REFERENCES `Core`.`PasswordPolicy` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `User_ibfk_3` FOREIGN KEY (`allowedIpRule`) REFERENCES `Core`.`UserAllowedIpRule` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Core`.`Uuid`",
    "createStatement": "CREATE TABLE `Core`.`Uuid` (`id` INT NOT NULL AUTO_INCREMENT,`uuidString` VARCHAR(36) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `uuidString` (`uuidString`));"
  },
  {
    "tableName": "`Core`.`Weekday`",
    "createStatement": "CREATE TABLE `Core`.`Weekday` (`id` INT NOT NULL AUTO_INCREMENT,`name` VARCHAR(255) NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `name` (`name`)) COMMENT='@enum@';"
  },
  {
    "tableName": "`Workflow`.`WorkflowAutoTransitionExecution`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowAutoTransitionExecution` (`id` INT NOT NULL AUTO_INCREMENT,`workflowItem` INT NOT NULL,`workflowTransition` INT NOT NULL,`transaction` BIGINT NOT NULL,PRIMARY KEY (`id`),KEY `workflowItem` (`workflowItem`),KEY `workflowTransition` (`workflowTransition`),KEY `transaction` (`transaction`),CONSTRAINT `WorkflowAutoTransitionExecution_ibfk_1` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowAutoTransitionExecution_ibfk_2` FOREIGN KEY (`workflowTransition`) REFERENCES `Workflow`.`WorkflowTransition` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowAutoTransitionExecution_ibfk_3` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowDemoObjectApproverLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowDemoObjectApproverLog` (`approver` INT NOT NULL,`transaction` BIGINT NOT NULL,`approvalTier` INT DEFAULT NULL,`user` INT DEFAULT NULL,`active` BOOL DEFAULT NULL,`approved` BOOL DEFAULT NULL,PRIMARY KEY (`approver`, `transaction`),KEY `transaction` (`transaction`),KEY `user` (`user`),CONSTRAINT `WorkflowDemoObjectApproverLog_ibfk_1` FOREIGN KEY (`approver`) REFERENCES `Workflow`.`WorkflowDemoObjectApprover` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowDemoObjectApproverLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowDemoObjectApproverLog_ibfk_3` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowDemoObjectApprover`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowDemoObjectApprover` (`id` INT NOT NULL AUTO_INCREMENT,`object` INT NOT NULL,`approvalTier` INT NOT NULL DEFAULT '0',`user` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`approved` BOOL DEFAULT NULL,PRIMARY KEY (`id`),KEY `object` (`object`),KEY `user` (`user`),CONSTRAINT `WorkflowDemoObjectApprover_ibfk_1` FOREIGN KEY (`object`) REFERENCES `Workflow`.`WorkflowDemoObject` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowDemoObjectApprover_ibfk_2` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowDemoObjectLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowDemoObjectLog` (`workflowDemoObject` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(50) DEFAULT NULL,`active` BOOL DEFAULT NULL,`workflowItem` INT DEFAULT NULL,PRIMARY KEY (`workflowDemoObject`, `transaction`),KEY `transaction` (`transaction`),KEY `workflowItem` (`workflowItem`),CONSTRAINT `WorkflowDemoObjectLog_ibfk_1` FOREIGN KEY (`workflowDemoObject`) REFERENCES `Workflow`.`WorkflowDemoObject` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowDemoObjectLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowDemoObjectLog_ibfk_3` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowDemoObject`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowDemoObject` (`id` INT NOT NULL AUTO_INCREMENT,`moduleInstance` INT NOT NULL,`name` VARCHAR(50) NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`workflowItem` INT DEFAULT NULL,PRIMARY KEY (`id`),UNIQUE KEY `moduleInstanceName` (`moduleInstance`, `name`),KEY `workflowItem` (`workflowItem`),CONSTRAINT `WorkflowDemoObject_ibfk_1` FOREIGN KEY (`moduleInstance`) REFERENCES `Workflow`.`WorkflowModuleInstance` (`base`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowDemoObject_ibfk_2` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowIconLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowIconLog` (`workflowIcon` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(255) DEFAULT NULL,`icon` INT DEFAULT NULL,PRIMARY KEY (`workflowIcon`, `transaction`),KEY `transaction` (`transaction`),KEY `icon` (`icon`),CONSTRAINT `WorkflowIconLog_ibfk_1` FOREIGN KEY (`workflowIcon`) REFERENCES `Workflow`.`WorkflowIcon` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowIconLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowIconLog_ibfk_3` FOREIGN KEY (`icon`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowIcon`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowIcon` (`id` INT NOT NULL AUTO_INCREMENT,`moduleInstance` INT NOT NULL,`name` VARCHAR(255) NOT NULL,`icon` INT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `moduleInstanceName` (`moduleInstance`, `name`),KEY `icon` (`icon`),CONSTRAINT `WorkflowIcon_ibfk_1` FOREIGN KEY (`moduleInstance`) REFERENCES `Workflow`.`WorkflowModuleInstance` (`base`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowIcon_ibfk_2` FOREIGN KEY (`icon`) REFERENCES `Core`.`StoredFile` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowItemLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowItemLog` (`workflowItem` INT NOT NULL,`transaction` BIGINT NOT NULL,`workflowNode` INT DEFAULT NULL,PRIMARY KEY (`workflowItem`, `transaction`),KEY `transaction` (`transaction`),KEY `workflowNode` (`workflowNode`),CONSTRAINT `WorkflowItemLog_ibfk_1` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowItemLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowItemLog_ibfk_3` FOREIGN KEY (`workflowNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowItemMessage`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowItemMessage` (`id` INT NOT NULL AUTO_INCREMENT,`workflowItem` INT NOT NULL,`transaction` BIGINT NOT NULL,`text` TEXT NOT NULL,PRIMARY KEY (`id`),KEY `workflowItem` (`workflowItem`),KEY `transaction` (`transaction`),CONSTRAINT `WorkflowItemMessage_ibfk_1` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowItemMessage_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowItem`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowItem` (`id` INT NOT NULL AUTO_INCREMENT,`workflow` INT NOT NULL,`workflowNode` INT NOT NULL,PRIMARY KEY (`id`),KEY `workflow` (`workflow`),KEY `workflowNode` (`workflowNode`),CONSTRAINT `WorkflowItem_ibfk_1` FOREIGN KEY (`workflow`) REFERENCES `Workflow`.`Workflow` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowItem_ibfk_2` FOREIGN KEY (`workflowNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowLog` (`workflow` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(255) DEFAULT NULL,`active` BOOL DEFAULT NULL,`currentVersion` INT DEFAULT NULL,PRIMARY KEY (`workflow`, `transaction`),KEY `transaction` (`transaction`),KEY `currentVersion` (`currentVersion`),CONSTRAINT `WorkflowLog_ibfk_1` FOREIGN KEY (`workflow`) REFERENCES `Workflow`.`Workflow` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowLog_ibfk_3` FOREIGN KEY (`currentVersion`) REFERENCES `Workflow`.`WorkflowVersion` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowModuleInstance`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowModuleInstance` (`base` INT NOT NULL COMMENT '@base@',PRIMARY KEY (`base`),CONSTRAINT `WorkflowModuleInstance_ibfk_1` FOREIGN KEY (`base`) REFERENCES `Core`.`ModuleInstanceBase` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodeActionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodeActionLog` (`workflowNodeAction` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`action` INT DEFAULT NULL,PRIMARY KEY (`workflowNodeAction`, `transaction`),KEY `transaction` (`transaction`),KEY `action` (`action`),CONSTRAINT `WorkflowNodeActionLog_ibfk_1` FOREIGN KEY (`workflowNodeAction`) REFERENCES `Workflow`.`WorkflowNodeAction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodeActionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodeActionLog_ibfk_3` FOREIGN KEY (`action`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodeActionPermissionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodeActionPermissionLog` (`workflowNodeActionPermission` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`permissionUuid` INT DEFAULT NULL,PRIMARY KEY (`workflowNodeActionPermission`, `transaction`),KEY `transaction` (`transaction`),KEY `permissionUuid` (`permissionUuid`),CONSTRAINT `WorkflowNodeActionPermissionLog_ibfk_1` FOREIGN KEY (`workflowNodeActionPermission`) REFERENCES `Workflow`.`WorkflowNodeActionPermission` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodeActionPermissionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodeActionPermissionLog_ibfk_3` FOREIGN KEY (`permissionUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodeActionPermission`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodeActionPermission` (`id` INT NOT NULL AUTO_INCREMENT,`workflowNodeAction` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`permissionUuid` INT NOT NULL,PRIMARY KEY (`id`),KEY `workflowNodeAction` (`workflowNodeAction`),KEY `permissionUuid` (`permissionUuid`),CONSTRAINT `WorkflowNodeActionPermission_ibfk_1` FOREIGN KEY (`workflowNodeAction`) REFERENCES `Workflow`.`WorkflowNodeAction` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowNodeActionPermission_ibfk_2` FOREIGN KEY (`permissionUuid`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodeAction`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodeAction` (`id` INT NOT NULL AUTO_INCREMENT,`workflowNode` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`action` INT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `workflowNodeAction` (`workflowNode`, `action`),KEY `action` (`action`),CONSTRAINT `WorkflowNodeAction_ibfk_1` FOREIGN KEY (`workflowNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowNodeAction_ibfk_2` FOREIGN KEY (`action`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodeLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodeLog` (`workflowNode` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(255) DEFAULT NULL,`XCoordinate` INT DEFAULT NULL,`YCoordinate` INT DEFAULT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`workflowNode`, `transaction`),KEY `transaction` (`transaction`),CONSTRAINT `WorkflowNodeLog_ibfk_1` FOREIGN KEY (`workflowNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodeLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodePreconditionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodePreconditionLog` (`workflowNodePrecondition` INT NOT NULL,`transaction` BIGINT NOT NULL,`active` BOOL DEFAULT NULL,`function` INT DEFAULT NULL,PRIMARY KEY (`workflowNodePrecondition`, `transaction`),KEY `transaction` (`transaction`),KEY `function` (`function`),CONSTRAINT `WorkflowNodePreconditionLog_ibfk_1` FOREIGN KEY (`workflowNodePrecondition`) REFERENCES `Workflow`.`WorkflowNodePrecondition` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodePreconditionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowNodePreconditionLog_ibfk_3` FOREIGN KEY (`function`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNodePrecondition`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNodePrecondition` (`id` INT NOT NULL AUTO_INCREMENT,`workflowNode` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`function` INT NOT NULL,PRIMARY KEY (`id`),KEY `workflowNode` (`workflowNode`),KEY `function` (`function`),CONSTRAINT `WorkflowNodePrecondition_ibfk_1` FOREIGN KEY (`workflowNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowNodePrecondition_ibfk_2` FOREIGN KEY (`function`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowNode`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowNode` (`id` INT NOT NULL AUTO_INCREMENT,`workflowVersion` INT NOT NULL,`name` VARCHAR(255) NOT NULL,`xCoordinate` INT NOT NULL DEFAULT '10',`yCoordinate` INT NOT NULL DEFAULT '150',`active` BOOL NOT NULL DEFAULT '1',PRIMARY KEY (`id`),KEY `workflowVersion` (`workflowVersion`),CONSTRAINT `WorkflowNode_ibfk_1` FOREIGN KEY (`workflowVersion`) REFERENCES `Workflow`.`WorkflowVersion` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTaskDelegationLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTaskDelegationLog` (`workflowTaskDelegation` INT NOT NULL,`transaction` BIGINT NOT NULL,`targetUser` INT DEFAULT NULL,`delegatedBy` INT DEFAULT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`workflowTaskDelegation`, `transaction`),KEY `transaction` (`transaction`),KEY `targetUser` (`targetUser`),KEY `delegatedBy` (`delegatedBy`),CONSTRAINT `WorkflowTaskDelegationLog_ibfk_1` FOREIGN KEY (`workflowTaskDelegation`) REFERENCES `Workflow`.`WorkflowTaskDelegation` (`workflowTask`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTaskDelegationLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTaskDelegationLog_ibfk_3` FOREIGN KEY (`targetUser`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTaskDelegationLog_ibfk_4` FOREIGN KEY (`delegatedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTaskDelegation`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTaskDelegation` (`workflowTask` INT NOT NULL,`targetUser` INT NOT NULL,`delegatedBy` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',PRIMARY KEY (`workflowTask`),KEY `targetUser` (`targetUser`),KEY `delegatedBy` (`delegatedBy`),CONSTRAINT `WorkflowTaskDelegation_ibfk_1` FOREIGN KEY (`workflowTask`) REFERENCES `Workflow`.`WorkflowTask` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTaskDelegation_ibfk_2` FOREIGN KEY (`targetUser`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTaskDelegation_ibfk_3` FOREIGN KEY (`delegatedBy`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTaskLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTaskLog` (`workflowTask` INT NOT NULL,`transaction` BIGINT NOT NULL,`user` INT DEFAULT NULL,`closed` BOOL DEFAULT NULL,`notify` BOOL DEFAULT NULL,PRIMARY KEY (`workflowTask`, `transaction`),KEY `transaction` (`transaction`),KEY `user` (`user`),CONSTRAINT `WorkflowTaskLog_ibfk_1` FOREIGN KEY (`workflowTask`) REFERENCES `Workflow`.`WorkflowTask` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTaskLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTaskLog_ibfk_3` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTask`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTask` (`id` INT NOT NULL AUTO_INCREMENT,`transaction` BIGINT NOT NULL,`workflowItem` INT NOT NULL,`user` INT NOT NULL,`closed` BOOL NOT NULL DEFAULT '0',`notify` BOOL NOT NULL DEFAULT '0',PRIMARY KEY (`id`),KEY `transaction` (`transaction`),KEY `workflowItem` (`workflowItem`),KEY `user` (`user`),CONSTRAINT `WorkflowTask_ibfk_1` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTask_ibfk_2` FOREIGN KEY (`workflowItem`) REFERENCES `Workflow`.`WorkflowItem` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTask_ibfk_3` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTransitionExecution`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTransitionExecution` (`id` INT NOT NULL AUTO_INCREMENT,`workflowTask` INT NOT NULL,`workflowTransition` INT NOT NULL,`transaction` BIGINT NOT NULL,PRIMARY KEY (`id`),UNIQUE KEY `workflowTask` (`workflowTask`),KEY `workflowTransition` (`workflowTransition`),KEY `transaction` (`transaction`),CONSTRAINT `WorkflowTransitionExecution_ibfk_1` FOREIGN KEY (`workflowTask`) REFERENCES `Workflow`.`WorkflowTask` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionExecution_ibfk_2` FOREIGN KEY (`workflowTransition`) REFERENCES `Workflow`.`WorkflowTransition` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionExecution_ibfk_3` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTransitionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTransitionLog` (`workflowTransition` INT NOT NULL,`transaction` BIGINT NOT NULL,`name` VARCHAR(255) DEFAULT NULL,`htmlColor` VARCHAR(7) DEFAULT NULL,`active` BOOL DEFAULT NULL,`sourceNode` INT DEFAULT NULL,`targetNode` INT DEFAULT NULL,`notify` BOOL DEFAULT NULL,`autoTransition` BOOL DEFAULT NULL,`requiredVotes` VARCHAR(255) DEFAULT NULL,`transitionIcon` INT DEFAULT NULL,`sideEffect` INT DEFAULT NULL,PRIMARY KEY (`workflowTransition`, `transaction`),KEY `transaction` (`transaction`),KEY `sourceNode` (`sourceNode`),KEY `targetNode` (`targetNode`),KEY `transitionIcon` (`transitionIcon`),KEY `sideEffect` (`sideEffect`),CONSTRAINT `WorkflowTransitionLog_ibfk_1` FOREIGN KEY (`workflowTransition`) REFERENCES `Workflow`.`WorkflowTransition` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTransitionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTransitionLog_ibfk_3` FOREIGN KEY (`sourceNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionLog_ibfk_4` FOREIGN KEY (`targetNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionLog_ibfk_5` FOREIGN KEY (`transitionIcon`) REFERENCES `Workflow`.`WorkflowIcon` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionLog_ibfk_6` FOREIGN KEY (`sideEffect`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTransitionPermissionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTransitionPermissionLog` (`transitionPermission` INT NOT NULL,`transaction` BIGINT NOT NULL,`permission` INT DEFAULT NULL,`active` BOOL DEFAULT NULL,PRIMARY KEY (`transitionPermission`, `transaction`),KEY `transaction` (`transaction`),KEY `permission` (`permission`),CONSTRAINT `WorkflowTransitionPermissionLog_ibfk_1` FOREIGN KEY (`transitionPermission`) REFERENCES `Workflow`.`WorkflowTransitionPermission` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTransitionPermissionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowTransitionPermissionLog_ibfk_3` FOREIGN KEY (`permission`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTransitionPermission`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTransitionPermission` (`id` INT NOT NULL AUTO_INCREMENT,`transition` INT NOT NULL,`permission` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',PRIMARY KEY (`id`),KEY `transition` (`transition`),KEY `permission` (`permission`),CONSTRAINT `WorkflowTransitionPermission_ibfk_1` FOREIGN KEY (`transition`) REFERENCES `Workflow`.`WorkflowTransition` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransitionPermission_ibfk_2` FOREIGN KEY (`permission`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowTransition`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowTransition` (`id` INT NOT NULL AUTO_INCREMENT,`workflowVersion` INT NOT NULL,`name` VARCHAR(255) NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`sourceNode` INT NOT NULL,`targetNode` INT NOT NULL,`notify` BOOL NOT NULL DEFAULT '1',`autoTransition` BOOL NOT NULL DEFAULT '0',`requiredVotes` VARCHAR(255) NOT NULL,`htmlColor` VARCHAR(7) DEFAULT NULL,`transitionIcon` INT DEFAULT NULL,`sideEffect` INT DEFAULT NULL,PRIMARY KEY (`id`),KEY `workflowVersion` (`workflowVersion`),KEY `sourceNode` (`sourceNode`),KEY `targetNode` (`targetNode`),KEY `transitionIcon` (`transitionIcon`),KEY `sideEffect` (`sideEffect`),CONSTRAINT `WorkflowTransition_ibfk_1` FOREIGN KEY (`workflowVersion`) REFERENCES `Workflow`.`WorkflowVersion` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransition_ibfk_2` FOREIGN KEY (`sourceNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransition_ibfk_3` FOREIGN KEY (`targetNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransition_ibfk_4` FOREIGN KEY (`transitionIcon`) REFERENCES `Workflow`.`WorkflowIcon` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowTransition_ibfk_5` FOREIGN KEY (`sideEffect`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowUserConfigurationLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowUserConfigurationLog` (`workflowUserConfiguration` INT NOT NULL,`transaction` BIGINT NOT NULL,`emailNotificationsForNewTasks` BOOL DEFAULT NULL,`substitute` INT DEFAULT NULL,`substituteFrom` DATE DEFAULT NULL,`substituteTo` DATE DEFAULT NULL,PRIMARY KEY (`workflowUserConfiguration`, `transaction`),KEY `transaction` (`transaction`),KEY `substitute` (`substitute`),CONSTRAINT `WorkflowUserConfigurationLog_ibfk_1` FOREIGN KEY (`workflowUserConfiguration`) REFERENCES `Workflow`.`WorkflowUserConfiguration` (`user`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowUserConfigurationLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowUserConfigurationLog_ibfk_3` FOREIGN KEY (`substitute`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowUserConfiguration`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowUserConfiguration` (`user` INT NOT NULL,`emailNotificationsForNewTasks` BOOL NOT NULL DEFAULT '1',`substitute` INT DEFAULT NULL,`substituteFrom` DATE DEFAULT NULL,`substituteTo` DATE DEFAULT NULL,PRIMARY KEY (`user`),KEY `substitute` (`substitute`),CONSTRAINT `WorkflowUserConfiguration_ibfk_1` FOREIGN KEY (`user`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowUserConfiguration_ibfk_2` FOREIGN KEY (`substitute`) REFERENCES `Core`.`User` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowVersionLog`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowVersionLog` (`workflowVersion` INT NOT NULL,`transaction` BIGINT NOT NULL,`rootNode` INT DEFAULT NULL,`draft` BOOL DEFAULT NULL,PRIMARY KEY (`workflowVersion`, `transaction`),KEY `transaction` (`transaction`),KEY `rootNode` (`rootNode`),CONSTRAINT `WorkflowVersionLog_ibfk_1` FOREIGN KEY (`workflowVersion`) REFERENCES `Workflow`.`WorkflowVersion` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowVersionLog_ibfk_2` FOREIGN KEY (`transaction`) REFERENCES `Core`.`Transaction` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,CONSTRAINT `WorkflowVersionLog_ibfk_3` FOREIGN KEY (`rootNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`WorkflowVersion`",
    "createStatement": "CREATE TABLE `Workflow`.`WorkflowVersion` (`id` INT NOT NULL AUTO_INCREMENT,`workflow` INT NOT NULL,`rootNode` INT DEFAULT NULL,`draft` BOOL NOT NULL DEFAULT '1',PRIMARY KEY (`id`),KEY `workflow` (`workflow`),KEY `rootNode` (`rootNode`),CONSTRAINT `WorkflowVersion_ibfk_1` FOREIGN KEY (`workflow`) REFERENCES `Workflow`.`Workflow` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `WorkflowVersion_ibfk_2` FOREIGN KEY (`rootNode`) REFERENCES `Workflow`.`WorkflowNode` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  },
  {
    "tableName": "`Workflow`.`Workflow`",
    "createStatement": "CREATE TABLE `Workflow`.`Workflow` (`id` INT NOT NULL AUTO_INCREMENT,`moduleInstance` INT NOT NULL,`name` VARCHAR(255) NOT NULL,`entityTable` INT NOT NULL,`active` BOOL NOT NULL DEFAULT '1',`currentVersion` INT DEFAULT NULL,PRIMARY KEY (`id`),KEY `moduleInstance` (`moduleInstance`),KEY `entityTable` (`entityTable`),KEY `currentVersion` (`currentVersion`),CONSTRAINT `Workflow_ibfk_1` FOREIGN KEY (`moduleInstance`) REFERENCES `Workflow`.`WorkflowModuleInstance` (`base`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `Workflow_ibfk_2` FOREIGN KEY (`entityTable`) REFERENCES `Core`.`Uuid` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,CONSTRAINT `Workflow_ibfk_3` FOREIGN KEY (`currentVersion`) REFERENCES `Workflow`.`WorkflowVersion` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT);"
  }
]
